[{"id":"85c96ff92dbf9b87","type":"tab","label":"Management Dashboard Nodes","disabled":false,"info":"","env":[]},{"id":"4b88393a51228257","type":"OpcUa-Item","z":"85c96ff92dbf9b87","item":"ns=3;s=\"xBG6\"","datatype":"Boolean","value":"","name":"","x":400,"y":100,"wires":[["08da30f1179cd7fb"]]},{"id":"08da30f1179cd7fb","type":"OpcUa-Client","z":"85c96ff92dbf9b87","endpoint":"9500387c60a57d0c","action":"read","deadbandtype":"a","deadbandvalue":1,"time":10,"timeUnit":"s","certificate":"n","localfile":"","localkeyfile":"","securitymode":"None","securitypolicy":"None","useTransport":false,"maxChunkCount":1,"maxMessageSize":8192,"receiveBufferSize":8192,"sendBufferSize":8192,"name":"CP_Station_7_Out","x":630,"y":100,"wires":[["c40102413f2de644"],[]]},{"id":"c40102413f2de644","type":"function","z":"85c96ff92dbf9b87","name":"Count Function","func":"var counter = context.get('counter') || 0; \nvar hitobject = context.get(\"hitobject\");\n\nif (hitobject ===undefined) {\n  hitobject = true;\n  context.set('hitobject', hitobject);\n  msg.test = ('set')\n}\n\nif ((msg.payload == true) && (hitobject == true)) {\n  counter ++; \n  hitobject = false;\n  context.set('counter', counter);\n  context.set('hitobject', hitobject);\n  msg.count1 = counter;\n\n}\n\nelse if ((msg.payload == true) && (hitobject == false)) {\n  msg.count1 = counter; \n\n}\n\nelse if ((msg.payload == false) && (hitobject == false)) {\n  hitobject = true; \n  context.set('hitobject', hitobject);\n  msg.test = ('reset');\n  msg.count1 = counter; \n\n}\n\nelse if ((msg.payload == false) && (hitobject == true)) {\n  msg.count1 = counter; \n  \n}\n/*\nmsg._time = new Date();\n\nconst values = [\n  {\n    \"dataPointId\": \"DP-Count\",\n    \"qualityCode\": \"0\",\n    \"value\": `${counter}` \n  }\n];\nmsg._time = new Date();\nmsg.payload=values;*/\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":860,"y":100,"wires":[["5f18e74d21b63540"]]},{"id":"9ca98b0a35028593","type":"mindconnect","z":"85c96ff92dbf9b87","name":"","configtype":"SHARED_SECRET","agentconfig":"{\n  \"content\": {\n    \"baseUrl\": \"https://southgate.eu1.mindsphere.io\",\n    \"iat\": \"eyJraWQiOiJrZXktaWQtMSIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJpc3MiOiJTQ0kiLCJzdWIiOiJlZGY3YjRkNTliN2U0ZDQ2ODdlNDgxYjNiYTdiN2ZjNSIsImF1ZCI6IkFJQU0iLCJpYXQiOjE3MDkyOTYwNzEsIm5iZiI6MTcwOTI5NjA3MSwiZXhwIjoxNzA5OTAwODcxLCJqdGkiOiIwOGE2OGNlMC1lZGZjLTQwMjQtOTFkYS0zMzJkZmIzNTI1NDIiLCJzY29wZSI6IklBVCIsInRlbiI6Imdic2lvdDAxIiwidGVuX2N0eCI6Im1haW4tdGVuYW50IiwiY2xpZW50X2NyZWRlbnRpYWxzX3Byb2ZpbGUiOlsiU0hBUkVEX1NFQ1JFVCJdLCJzY2hlbWFzIjpbInVybjpzaWVtZW5zOm1pbmRzcGhlcmU6djEiXX0.TxhjnLbhcoK7VcyirswI-V73IdaclWmxjbMCZzgs5gMCCerK1UiJ7WApRQtKJeDzPV7XNrXSI_MiH2ZH947tEtYfmKy9yqazxJeleYlsXD5Ek6sPkC7ukgSyE6NUZIti31zo4C7MnMonmK_aql2o3mQqnqAaI17GnuPprC3gxkRVa6FoaTE4nTE7daxyO_-xXCX5vrjT6HaTsSQrIw76_GpxjOuLCalJrl1zQ1uND4AR_4-_umqUAHG51pYBHUN8hC6Lxw9B-mmV-VC-ZfYXuc_WlUsV-HvWhCHRHrFQJPuK30EGkJIZJJE0BOT0j0DV0pys-cl1ebypjUNdMerWSg\",\n    \"clientCredentialProfile\": [\n      \"SHARED_SECRET\"\n    ],\n    \"clientId\": \"edf7b4d59b7e4d4687e481b3ba7b7fc5\",\n    \"tenant\": \"gbsiot01\"\n  },\n  \"expiration\": \"2024-03-08T12:27:51.000Z\"\n}","privatekey":"","model":"","validate":true,"validateevent":true,"chunk":false,"disablekeepalive":false,"emitcontrol":false,"datalakeonly":false,"supressverbosity":false,"retry":3,"parallel":1,"asyncduration":10,"x":1670,"y":560,"wires":[[]]},{"id":"6663f7913f612367","type":"comment","z":"85c96ff92dbf9b87","name":"Manager Dashboard Nodes","info":"This is the managers side of the\ndashboard, however there needs some more\ndata points of other features:\n\n- OEE \n- Predic Time\n- Count (done)\n- Scheduals of productions\n- Logging of team members ","x":1000,"y":40,"wires":[]},{"id":"c4be66d1bb96716b","type":"OpcUa-Item","z":"85c96ff92dbf9b87","item":"ns=3;s=\"Rfid1_IN\".\"xTagPresent\"","datatype":"Boolean","value":"","name":"RFID Sensor1","x":400,"y":300,"wires":[["c72c63010b359e12"]]},{"id":"b3634cc4e0e47ec2","type":"function","z":"85c96ff92dbf9b87","name":"Station 1 Function","func":"msg.s2 = msg.payload;\n\n\nlet clock_value1 = flow.get(\"clock_value1\") || 0;\n\n\nlet mins1 = Math.floor(clock_value1 / 60);\nlet secs1 = clock_value1 % 60; \n\nvar toggle = context.get(\"toggle\") || 0; \n\nvar hitobject1 = context.get(\"hitobject1\"); \n\nvar stop_time = context.get(\"stop_time\") || 0;\nvar idle_time = context.get(\"idle_time\") || 0;\n\n\nif (hitobject1 === undefined) { \n    hitobject1 = true; \n    context.set(\"hitobject1\", hitobject1);\n}\n\nif (msg.reset == true) {\n    clock_value1 = 0\n    context.set(\"clock_value1\", clock_value1)\n}\n\nif (msg.s2 == false) {\n    idle_time++;\n    msg.idle_time1 = idle_time; \n    context.set(\"idle_time\", idle_time);\n}\n\nif (msg.s2 == true) {\n    msg.idle_time1  = idle_time; \n\n}\n\nif ((msg.s2 == true) && (hitobject1 == true)) {\n    toggle = 1;\n    hitobject1 = false;\n    context.set(\"toggle\", toggle); \n    context.set(\"hitobject1\", hitobject1);\n    msg.msg1 = (\"Toggle 'ON'\")\n\n}\nelse if ((msg.s2 == true) && (hitobject1 == false)) { \n    hitobject1 = false; \n    context.set(\"hitobject\", hitobject1);\n}\n    \nelse if ((msg.s2 == false) && (hitobject1 == false)) {\n    toggle = 0;\n    hitobject1 = true; \n    flow.get(\"toggle\")\n    msg.time1 = clock_value1\n    context.set(\"toggle\", toggle);\n    context.set(\"hitobject1\", hitobject1);\n    msg.msg2 = (\"Toggle 'OFF'\")\n\n}\n\nelse if ((msg.s2 == false) && (hitobject1 == true)) { \n    hitobject1 = true; \n    context.set(\"hitobject1\", hitobject1);\n}\n\nif (toggle == 1) {\n    clock_value1++; \n\n    if (clock_value1 < 0) clock_value1 = 0;\n\n    flow.set(\"clock_value1\", clock_value1);\n    msg.sec1 = clock_value1\n    let mins = Math.floor(clock_value1/60);\n    let secs = clock_value1 % 60;\n\n    msg.time = (mins + (secs / 100.0)).toFixed(2)\n    msg.time = Number(msg.time);\n    \n}\n\nvar time1 = msg.time1\nvar toggle1 = context.get(\"toggle1\");\nvar time_array1 = context.get(\"time_array1\");\n\nif (toggle1 === undefined) {\n    toggle1 = 0;\n    context.set(\"toggle1\", toggle1);\n}\n\nif (time_array1 === undefined) {\n    time_array1 = [0, 0, 0, 0, 0]\n    context.set(\"time_array1\", time_array1);\n}\n\nif ((time1 >= 1) && (time_array1[0] < 1) && (toggle1 == 0)) {\n    toggle1 = 1;\n    time_array1[0] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if ((time1 >= 1) && (time_array1[1] < 1) && (toggle1 == 1)) {\n    toggle1 = 2;\n    time_array1[1] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if ((time1 >= 1) && (time_array1[2] < 1) && (toggle1 == 2)) {\n    toggle1 = 3;\n    time_array1[2] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if ((time1 >= 1) && (time_array1[3] < 1) && (toggle1 == 3)) {\n    toggle1 = 4;\n    time_array1[3] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if ((time1 >= 1) && (time_array1[4] < 1) && (toggle1 == 4)) {\n    toggle1 = 5;\n    time_array1[4] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if (toggle1 == 5){\n    toggle1 = 6;\n    context.set(\"toggle1\", toggle1);\n    \n}\n\nif (toggle1 == 6) {\n    toggle1 = 0;\n    time_array1 = [0, 0, 0, 0, 0];\n    context.set(\"time_array1\", time_array1);\n    context.set(\"toggle1\", toggle1);  \n}\n\nmsg.cycle_time1 = time_array1\nmsg.run_time1 = clock_value1\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":870,"y":300,"wires":[["5f18e74d21b63540"]]},{"id":"0e74a9cf73286c4c","type":"function","z":"85c96ff92dbf9b87","name":"OEE/Time Calculation","func":"var prod_count = msg.count1\n\nvar cycle_time1 = msg.cycle_time1\nvar cycle_time2 = msg.cycle_time2\nvar cycle_time3 = msg.cycle_time3\nvar cycle_time4 = msg.cycle_time4\nvar cycle_time5 = msg.cycle_time5\nvar cycle_time6 = msg.cycle_time6\nvar cycle_time7 = msg.cycle_time7\n\nvar idle_time1 = msg.idle_time1\nvar idle_time2 = msg.idle_time2\nvar idle_time3 = msg.idle_time3\nvar idle_time4 = msg.idle_time4\nvar idle_time5 = msg.idle_time5\nvar idle_time6 = msg.idle_time6\nvar idle_time7 = msg.idle_time7  \n\nmsg.run_time1\nmsg.run_time2\nmsg.run_time3\nmsg.run_time4\nmsg.run_time5\nmsg.run_time6\nmsg.run_time7\n\n\nvar idle_time_total = context.get(\"idle_time_total\") || 0;\nvar cycle_time_total = context.get(\"run_time_total\") || 0;\nvar run_time_total = context.get(\"run_time_total1\") || 0; \n\nvar OEE = context.get(\"OEE\") || 0;\nvar availability = context.get(\"availability\") || 0;\nvar performance = context.get(\"performance\") || 0;\nvar quality = context.get(\"quality\");\n\nvar availability_loss\nvar performance_loss\nvar quality_loss\n\n//Idle Time math working \n\n\nidle_time_total = idle_time1 + idle_time2 + idle_time3 + idle_time4 + idle_time5 + idle_time6 + idle_time7\ncontext.set(\"idle_time\", idle_time_total);\n\n//run_time\nrun_time_total = msg.run_time1 + msg.run_time2 + msg.run_time3 + msg.run_time4 + msg.run_time5 + msg.run_time6 + msg.run_time7\ncontext.set(\"run_time_total\", run_time_total)\nmsg.test = cycle_time1 \n\n/*\nif  ((cycle_time1[0] >= 1) && (cycle_time2[0] >= 1) && (cycle_time3[0] >= 1) && (cycle_time4[0] >= 1) && (cycle_time5[0] >= 1)) {\n  cycle_time_total = cycle_time1[0] + cycle_time2[0] + cycle_time3[0] + cycle_time4[0] + cycle_time1[5] + cycle_time6[0] + cycle_time7[0]\n}\n\nelse if ((cycle_time1[0] >= 1) && (cycle_time2[0] >= 1) && (cycle_time3[0] >= 1) && (cycle_time4[0] >= 1) && (cycle_time5[0] >= 1) && (cycle_time6[0] >= 1) && (cycle_time7[0] >= 1)) {\n  cycle_time_total = cycle_time1[0] + cycle_time2[0] + cycle_time3[0] + cycle_time4[0] + cycle_time1[5] + cycle_time6[0] + cycle_time7[0]\n}\n\n\nelse if ((cycle_time1[0] >= 1) && (cycle_time2[0] >= 1) && (cycle_time3[0] >= 1) && (cycle_time4[0] >= 1) && (cycle_time5[0] >= 1) && (cycle_time6[0] >= 1) && (cycle_time7[0] >= 1)) {\n  cycle_time_total = cycle_time1[0] + cycle_time2[0] + cycle_time3[0] + cycle_time4[0] + cycle_time1[5] + cycle_time6[0] + cycle_time7[0]\n}\n\nelse if ((cycle_time1[0] >= 1) && (cycle_time2[0] >= 1) && (cycle_time3[0] >= 1) && (cycle_time4[0] >= 1) && (cycle_time5[0] >= 1) && (cycle_time6[0] >= 1) && (cycle_time7[0] >= 1)) {\n  cycle_time_total = cycle_time1[0] + cycle_time2[0] + cycle_time3[0] + cycle_time4[0] + cycle_time1[5] + cycle_time6[0] + cycle_time7[0]\n}\n\nelse if ((cycle_time1[0] >= 1) && (cycle_time2[0] >= 1) && (cycle_time3[0] >= 1) && (cycle_time4[0] >= 1) && (cycle_time5[0] >= 1) && (cycle_time6[0] >= 1) && (cycle_time7[0] >= 1)) {\n  cycle_time_total = cycle_time1[0] + cycle_time2[0] + cycle_time3[0] + cycle_time4[0] + cycle_time1[5] + cycle_time6[0] + cycle_time7[0]\n}\n\nelse if ((cycle_time1[0] >= 1) && (cycle_time2[0] >= 1) && (cycle_time3[0] >= 1) && (cycle_time4[0] >= 1) && (cycle_time5[0] >= 1) && (cycle_time6[0] >= 1) && (cycle_time7[0] >= 1)) {\n  cycle_time_total = cycle_time1[0] + cycle_time2[0] + cycle_time3[0] + cycle_time4[0] + cycle_time1[5] + cycle_time6[0] + cycle_time7[0]\n}\n\nelse if ((cycle_time1[0] >= 1) && (cycle_time2[0] >= 1) && (cycle_time3[0] >= 1) && (cycle_time4[0] >= 1) && (cycle_time5[0] >= 1) && (cycle_time6[0] >= 1) && (cycle_time7[0] >= 1)) {\n  cycle_time_total = cycle_time1[0] + cycle_time2[0] + cycle_time3[0] + cycle_time4[0] + cycle_time1[5] + cycle_time6[0] + cycle_time7[0]\n}*/\n\n//OEE Cal\n\n//Availability\navailability = run_time_total / 1000\n\n\n\n//Performance\nif ((prod_count >= 1) && (run_time_total >=1)) {\n    performance = (25*prod_count)/run_time_total\n\n}\nelse {\n  performance = 0;\n}\n\n//Quality \nquality = 10 / 10\n\n//OEE\nOEE = (availability * performance * quality) * 100\ncontext.set(\"OEE\", OEE)\n\n//OEE loss \n\n//availability Loss \navailability_loss = 1 - availability \n\n//performance loss\nperformance_loss = 1 - performance\n\nif (performance_loss == 1) {\n  performance_loss = 0 \n}\nif (availability_loss == 1) {\n  availability_loss = 0\n}\n\n\nmsg.runtime1 = run_time_total\nmsg.idletime1 = idle_time_total\n\n\nmsg.OEE = OEE\nmsg.availability = availability * 100\nmsg.performance = performance * 100\nmsg.quality = quality * 100\n\nmsg.availability_loss = availability_loss * 100\nmsg.performance_loss = performance_loss * 100 \nmsg.quality_loss = 0\n\nif (msg.reset) {\n  run_time_total = msg.stop1\n  idle_time_total = msg.stop2 \n  msg.quality_loss = msg.stop3\n  prod_count = msg.stop4\n  msg.performance_loss = msg.stop5\n  msg.performance = msg.stop6 \n  OEE = msg.stop7\n  msg.availability_loss = msg.stop8 \n  msg.availability = msg.stop9\n  context.set(\"run_time_total\", run_time_total)\n  context.set(\"idle_time_total\", idle_time_total)\n  context.set(\"msg.quality_loss\", msg.quality.loss)\n  context.set(\"prod_count\", prod_count)\n  context.set(\"msg.performance_loss\", msg.performance_loss)\n  context.set(\"msg.performance\", performance)\n  context.set(\"OEE\", OEE)\n  context.set(\"msg.availability_loss\", msg.availability_loss)\n  context.set(\"msg.availability\", availability)\n}\n\n\nconst values = [\n  {\n    \"dataPointId\": \"DP-Total_run_time\",\n    \"qualityCode\": \"0\",\n    \"value\": `${run_time_total}`\n  },\n  {\n    \"dataPointId\": \"DP-Total_idle_time\",\n    \"qualityCode\": \"0\",\n    \"value\": `${idle_time_total}`\n  },\n  {\n    \"dataPointId\": \"DP-Quality_loss\",\n    \"qualityCode\": \"0\",\n    \"value\": `${msg.quality_loss}`\n  },\n  {\n    \"dataPointId\": \"DP-Quality\",\n    \"qualityCode\": \"0\",\n    \"value\": `${msg.quality}`\n  },\n  {\n    \"dataPointId\": \"DP-Production_count\",\n    \"qualityCode\": \"0\",\n    \"value\": `${prod_count}`\n  },\n  {\n    \"dataPointId\": \"DP-Performance_loss\",\n    \"qualityCode\": \"0\",\n    \"value\": `${msg.performance_loss}`\n  },\n  {\n    \"dataPointId\": \"DP-Performance\",\n    \"qualityCode\": \"0\",\n    \"value\": `${msg.performance}`\n  },\n  {\n    \"dataPointId\": \"DP-OEE\",\n    \"qualityCode\": \"0\",\n    \"value\": `${OEE}`\n  },\n  {\n    \"dataPointId\": \"DP-Availability_loss\",\n    \"qualityCode\": \"0\",\n    \"value\": `${msg.availability_loss}`\n  },\n  {\n    \"dataPointId\": \"DP-Availability\",\n    \"qualityCode\": \"0\",\n    \"value\": `${msg.availability}`\n  }\n];\nmsg._time = new Date();\nmsg.payload = values;\nreturn msg;\n\n\n\n\n\n\n\n\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1380,"y":540,"wires":[["9ca98b0a35028593"]]},{"id":"68e87a1d29ed73ab","type":"OpcUa-Item","z":"85c96ff92dbf9b87","item":"ns=3;s=\"Rfid1_IN\".\"xTagPresent\"","datatype":"Boolean","value":"","name":"RFID Sensor2","x":400,"y":380,"wires":[["22cef214ca0514c8"]]},{"id":"22cef214ca0514c8","type":"OpcUa-Client","z":"85c96ff92dbf9b87","endpoint":"999b7b41e9f7c6f3","action":"read","deadbandtype":"a","deadbandvalue":1,"time":10,"timeUnit":"s","certificate":"n","localfile":"","localkeyfile":"","securitymode":"None","securitypolicy":"None","useTransport":false,"maxChunkCount":1,"maxMessageSize":8192,"receiveBufferSize":8192,"sendBufferSize":8192,"name":"CP1_Station_2_Meas","x":640,"y":380,"wires":[["1c8e4f6324dacb60"],[]]},{"id":"1c8e4f6324dacb60","type":"function","z":"85c96ff92dbf9b87","name":"Station 2 Function","func":"msg.s2 = msg.payload;\n\n\nlet clock_value1 = flow.get(\"clock_value1\") || 0;\nlet clock_value2 = flow.get(\"clock_value2\") || 0;\nlet clock_value3 = flow.get(\"clock_value3\") || 0; \n\nlet mins1 = Math.floor(clock_value1 / 60);\nlet secs1 = clock_value1 % 60; \nlet mins2 = Math.floor(clock_value2 / 60);\nlet secs2 = clock_value2 % 60; \nlet mins3 = Math.floor(clock_value3 / 60);\nlet secs3 = clock_value3 % 60; \n\nvar toggle = context.get(\"toggle\") || 0; \n\nvar hitobject1 = context.get(\"hitobject1\"); \nvar hitobject2 = context.get(\"hitobject2\"); \nvar hitobject3 = context.get(\"hitobject3\"); \n\nvar idle_time = context.get(\"idle_time\") || 0;\n\n\nif (hitobject1 === undefined) { \n    hitobject1 = true; \n    context.set(\"hitobject1\", hitobject1);\n}\nif (hitobject2 === undefined) {\n    hitobject2 = true;\n    context.set(\"hitobject2\", hitobject2); \n}\nif (hitobject3 === undefined) {\n    hitobject3 = true; \n    context.set(\"hitobject3\", hitobject3); \n}\n\nif (msg.reset) {\n    clock_value1 = 0\n    context.set(\"clock_value1\", clock_value1)\n}\n\nif (msg.s2 == false) {\n    idle_time++;\n    msg.idle_time2 = idle_time; \n    context.set(\"idle_time\", idle_time);\n}\n\nif (msg.s2 == true) {\n\n    msg.idle_time2  = idle_time; \n    \n}\nif ((msg.s2 == true) && (hitobject1 == true)) {\n    toggle = 1;\n    hitobject1 = false;\n    context.set(\"toggle\", toggle); \n    context.set(\"hitobject1\", hitobject1);\n    msg.msg1 = (\"Toggle 'ON'\")\n\n}\nelse if ((msg.s2 == true) && (hitobject1 == false)) { \n    hitobject1 = false; \n    context.set(\"hitobject\", hitobject1);\n}\n    \nelse if ((msg.s2 == false) && (hitobject1 == false)) {\n    toggle = 0;\n    hitobject1 = true; \n    flow.get(\"toggle\")\n    msg.time1 = clock_value1\n\n    context.set(\"toggle\", toggle);\n    context.set(\"hitobject1\", hitobject1);\n    msg.msg2 = (\"Toggle 'OFF'\")\n\n}\n\nelse if ((msg.s2 == false) && (hitobject1 == true)) { \n    hitobject1 = true; \n    context.set(\"hitobject1\", hitobject1);\n}\n\nif (toggle == 1) {\n    clock_value1++; \n\n    if (clock_value1 < 0) clock_value1 = 0;\n\n    flow.set(\"clock_value1\", clock_value1);\n    msg.sec1 = clock_value1\n    let mins = Math.floor(clock_value1/60);\n    let secs = clock_value1 % 60;\n\n    msg.time = (mins + (secs / 100.0)).toFixed(2)\n    msg.time = Number(msg.time);\n    \n}\n\nvar time1 = msg.time1\nvar toggle1 = context.get(\"toggle1\");\nvar time_array1 = context.get(\"time_array1\");\n\nif (toggle1 === undefined) {\n    toggle1 = 0;\n    context.set(\"toggle1\", toggle1);\n}\n\nif (time_array1 === undefined) {\n    time_array1 = [0, 0, 0, 0, 0]\n    context.set(\"time_array1\", time_array1);\n}\n\nif ((time1 >= 1) && (time_array1[0] < 1) && (toggle1 == 0)) {\n    toggle1 = 1;\n    time_array1[0] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if ((time1 >= 1) && (time_array1[1] < 1) && (toggle1 == 1)) {\n    toggle1 = 2;\n    time_array1[1] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if ((time1 >= 1) && (time_array1[2] < 1) && (toggle1 == 2)) {\n    toggle1 = 3;\n    time_array1[2] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if ((time1 >= 1) && (time_array1[3] < 1) && (toggle1 == 3)) {\n    toggle1 = 4;\n    time_array1[3] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if ((time1 >= 1) && (time_array1[4] < 1) && (toggle1 == 4)) {\n    toggle1 = 5;\n    time_array1[4] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if (toggle1 == 5){\n    toggle1 = 6;\n    context.set(\"toggle1\", toggle1);\n    \n}\n\nif (toggle1 == 6) {\n    toggle1 = 0;\n    time_array1 = [0, 0, 0, 0, 0];\n    context.set(\"time_array1\", time_array1);\n    context.set(\"toggle1\", toggle1);  \n}\n\nmsg.cycle_time2 = time_array1\nmsg.run_time2 = clock_value1\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":870,"y":380,"wires":[["5f18e74d21b63540"]]},{"id":"1988f9497e011eb1","type":"OpcUa-Item","z":"85c96ff92dbf9b87","item":"ns=3;s=\"Rfid1_IN\".\"xTagPresent\"","datatype":"Boolean","value":"","name":"RFID Sensor3","x":400,"y":460,"wires":[["b5184df1ad6c8519"]]},{"id":"b5184df1ad6c8519","type":"OpcUa-Client","z":"85c96ff92dbf9b87","endpoint":"a56a2dedfd8a174b","action":"read","deadbandtype":"a","deadbandvalue":1,"time":10,"timeUnit":"s","certificate":"n","localfile":"","localkeyfile":"","securitymode":"None","securitypolicy":"None","useTransport":false,"maxChunkCount":1,"maxMessageSize":8192,"receiveBufferSize":8192,"sendBufferSize":8192,"name":"CP1_Station _3_Drill","x":640,"y":460,"wires":[["47606e33c7562d29"],[]]},{"id":"47606e33c7562d29","type":"function","z":"85c96ff92dbf9b87","name":"Station 3 Function","func":"msg.s2 = msg.payload;\n\n\nlet clock_value1 = flow.get(\"clock_value1\") || 0;\nlet clock_value2 = flow.get(\"clock_value2\") || 0;\nlet clock_value3 = flow.get(\"clock_value3\") || 0; \n\nlet mins1 = Math.floor(clock_value1 / 60);\nlet secs1 = clock_value1 % 60; \nlet mins2 = Math.floor(clock_value2 / 60);\nlet secs2 = clock_value2 % 60; \nlet mins3 = Math.floor(clock_value3 / 60);\nlet secs3 = clock_value3 % 60; \n\nvar toggle = context.get(\"toggle\") || 0; \n\nvar hitobject1 = context.get(\"hitobject1\"); \nvar hitobject2 = context.get(\"hitobject2\"); \nvar hitobject3 = context.get(\"hitobject3\"); \n\nvar idle_time = context.get(\"idle_time\") || 0;\n\n\nif (hitobject1 === undefined) { \n    hitobject1 = true; \n    context.set(\"hitobject1\", hitobject1);\n}\nif (hitobject2 === undefined) {\n    hitobject2 = true;\n    context.set(\"hitobject2\", hitobject2); \n}\nif (hitobject3 === undefined) {\n    hitobject3 = true; \n    context.set(\"hitobject3\", hitobject3); \n}\n\nif (msg.reset) {\n    clock_value1 = 0\n    context.set(\"clock_value1\", clock_value1)\n}\n\nif (msg.s2 == false) {\n    idle_time++;\n    msg.idle_time3 = idle_time; \n    context.set(\"idle_time\", idle_time);\n}\n\nif (msg.s2 == true) {\n\n    msg.idle_time3  = idle_time; \n    \n}\nif ((msg.s2 == true) && (hitobject1 == true)) {\n    toggle = 1;\n    hitobject1 = false;\n    context.set(\"toggle\", toggle); \n    context.set(\"hitobject1\", hitobject1);\n    msg.msg1 = (\"Toggle 'ON'\")\n\n}\nelse if ((msg.s2 == true) && (hitobject1 == false)) { \n    hitobject1 = false; \n    context.set(\"hitobject\", hitobject1);\n}\n    \nelse if ((msg.s2 == false) && (hitobject1 == false)) {\n    toggle = 0;\n    hitobject1 = true; \n    flow.get(\"toggle\")\n    msg.time1 = clock_value1\n\n    context.set(\"toggle\", toggle);\n    context.set(\"hitobject1\", hitobject1);\n    msg.msg2 = (\"Toggle 'OFF'\")\n\n}\n\nelse if ((msg.s2 == false) && (hitobject1 == true)) { \n    hitobject1 = true; \n    context.set(\"hitobject1\", hitobject1);\n}\n\nif (toggle == 1) {\n    clock_value1++; \n\n    if (clock_value1 < 0) clock_value1 = 0;\n\n    flow.set(\"clock_value1\", clock_value1);\n    msg.sec1 = clock_value1\n    let mins = Math.floor(clock_value1/60);\n    let secs = clock_value1 % 60;\n\n    msg.time = (mins + (secs / 100.0)).toFixed(2)\n    msg.time = Number(msg.time);\n    \n}\n\nvar time1 = msg.time1\nvar toggle1 = context.get(\"toggle1\");\nvar time_array1 = context.get(\"time_array1\");\n\nif (toggle1 === undefined) {\n    toggle1 = 0;\n    context.set(\"toggle1\", toggle1);\n}\n\nif (time_array1 === undefined) {\n    time_array1 = [0, 0, 0, 0, 0]\n    context.set(\"time_array1\", time_array1);\n}\n\nif ((time1 >= 1) && (time_array1[0] < 1) && (toggle1 == 0)) {\n    toggle1 = 1;\n    time_array1[0] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if ((time1 >= 1) && (time_array1[1] < 1) && (toggle1 == 1)) {\n    toggle1 = 2;\n    time_array1[1] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if ((time1 >= 1) && (time_array1[2] < 1) && (toggle1 == 2)) {\n    toggle1 = 3;\n    time_array1[2] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if ((time1 >= 1) && (time_array1[3] < 1) && (toggle1 == 3)) {\n    toggle1 = 4;\n    time_array1[3] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if ((time1 >= 1) && (time_array1[4] < 1) && (toggle1 == 4)) {\n    toggle1 = 5;\n    time_array1[4] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if (toggle1 == 5){\n    toggle1 = 6;\n    context.set(\"toggle1\", toggle1);\n    \n}\n\nif (toggle1 == 6) {\n    toggle1 = 0;\n    time_array1 = [0, 0, 0, 0, 0];\n    context.set(\"time_array1\", time_array1);\n    context.set(\"toggle1\", toggle1);  \n}\n\nmsg.cycle_time3 = time_array1\nmsg.run_time3 = clock_value1\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":870,"y":460,"wires":[["5f18e74d21b63540"]]},{"id":"0f8839e1f4b85651","type":"inject","z":"85c96ff92dbf9b87","name":"Activation","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"2","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":130,"y":580,"wires":[["ca7b10f66bee855f","1988f9497e011eb1","68e87a1d29ed73ab","c4be66d1bb96716b","204e05efec121b11","3c909e429b84afce","0c91296dde1dc593","4b88393a51228257"]]},{"id":"ca7b10f66bee855f","type":"OpcUa-Item","z":"85c96ff92dbf9b87","item":"ns=3;s=\"Rfid1_IN\".\"xTagPresent\"","datatype":"Boolean","value":"","name":"RFID Sensor4","x":400,"y":540,"wires":[["556016e237aa0f82"]]},{"id":"556016e237aa0f82","type":"OpcUa-Client","z":"85c96ff92dbf9b87","endpoint":"8ab7f5c25f78e4cc","action":"read","deadbandtype":"a","deadbandvalue":1,"time":10,"timeUnit":"s","certificate":"n","localfile":"","localkeyfile":"","securitymode":"None","securitypolicy":"None","useTransport":false,"maxChunkCount":1,"maxMessageSize":8192,"receiveBufferSize":8192,"sendBufferSize":8192,"name":"CP1_Station_4_IPICK","x":640,"y":540,"wires":[["ed6c8df4a77d983e"],[]]},{"id":"ed6c8df4a77d983e","type":"function","z":"85c96ff92dbf9b87","name":"Station 4 Function","func":"msg.s2 = msg.payload;\n\n\nlet clock_value1 = flow.get(\"clock_value1\") || 0;\nlet clock_value2 = flow.get(\"clock_value2\") || 0;\nlet clock_value3 = flow.get(\"clock_value3\") || 0;\n\nlet mins1 = Math.floor(clock_value1 / 60);\nlet secs1 = clock_value1 % 60;\nlet mins2 = Math.floor(clock_value2 / 60);\nlet secs2 = clock_value2 % 60;\nlet mins3 = Math.floor(clock_value3 / 60);\nlet secs3 = clock_value3 % 60;\n\nvar toggle = context.get(\"toggle\") || 0;\n\nvar hitobject1 = context.get(\"hitobject1\");\nvar hitobject2 = context.get(\"hitobject2\");\nvar hitobject3 = context.get(\"hitobject3\");\n\nvar idle_time = context.get(\"idle_time\") || 0;\n\n\nif (hitobject1 === undefined) {\n    hitobject1 = true;\n    context.set(\"hitobject1\", hitobject1);\n}\nif (hitobject2 === undefined) {\n    hitobject2 = true;\n    context.set(\"hitobject2\", hitobject2);\n}\nif (hitobject3 === undefined) {\n    hitobject3 = true;\n    context.set(\"hitobject3\", hitobject3);\n}\n\nif (msg.reset) {\n    clock_value1 = 0\n    context.set(\"clock_value1\", clock_value1)\n}\n\nif (msg.s2 == false) {\n    idle_time++;\n    msg.idle_time4 = idle_time;\n    context.set(\"idle_time\", idle_time);\n}\n\nif (msg.s2 == true) {\n\n    msg.idle_time4 = idle_time;\n\n}\nif ((msg.s2 == true) && (hitobject1 == true)) {\n    toggle = 1;\n    hitobject1 = false;\n    context.set(\"toggle\", toggle);\n    context.set(\"hitobject1\", hitobject1);\n    msg.msg1 = (\"Toggle 'ON'\")\n\n}\nelse if ((msg.s2 == true) && (hitobject1 == false)) {\n    hitobject1 = false;\n    context.set(\"hitobject\", hitobject1);\n}\n\nelse if ((msg.s2 == false) && (hitobject1 == false)) {\n    toggle = 0;\n    hitobject1 = true;\n    flow.get(\"toggle\")\n    msg.time1 = clock_value1\n\n    context.set(\"toggle\", toggle);\n    context.set(\"hitobject1\", hitobject1);\n    msg.msg2 = (\"Toggle 'OFF'\")\n\n}\n\nelse if ((msg.s2 == false) && (hitobject1 == true)) {\n    hitobject1 = true;\n    context.set(\"hitobject1\", hitobject1);\n}\n\nif (toggle == 1) {\n    clock_value1++;\n\n    if (clock_value1 < 0) clock_value1 = 0;\n\n    flow.set(\"clock_value1\", clock_value1);\n    msg.sec1 = clock_value1\n    let mins = Math.floor(clock_value1 / 60);\n    let secs = clock_value1 % 60;\n\n    msg.time = (mins + (secs / 100.0)).toFixed(2)\n    msg.time = Number(msg.time);\n\n}\n\nvar time1 = msg.time1\nvar toggle1 = context.get(\"toggle1\");\nvar time_array1 = context.get(\"time_array1\");\n\nif (toggle1 === undefined) {\n    toggle1 = 0;\n    context.set(\"toggle1\", toggle1);\n}\n\nif (time_array1 === undefined) {\n    time_array1 = [0, 0, 0, 0, 0]\n    context.set(\"time_array1\", time_array1);\n}\n\nif ((time1 >= 1) && (time_array1[0] < 1) && (toggle1 == 0)) {\n    toggle1 = 1;\n    time_array1[0] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if ((time1 >= 1) && (time_array1[1] < 1) && (toggle1 == 1)) {\n    toggle1 = 2;\n    time_array1[1] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if ((time1 >= 1) && (time_array1[2] < 1) && (toggle1 == 2)) {\n    toggle1 = 3;\n    time_array1[2] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if ((time1 >= 1) && (time_array1[3] < 1) && (toggle1 == 3)) {\n    toggle1 = 4;\n    time_array1[3] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if ((time1 >= 1) && (time_array1[4] < 1) && (toggle1 == 4)) {\n    toggle1 = 5;\n    time_array1[4] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if (toggle1 == 5) {\n    toggle1 = 6;\n    context.set(\"toggle1\", toggle1);\n\n}\n\nif (toggle1 == 6) {\n    toggle1 = 0;\n    time_array1 = [0, 0, 0, 0, 0];\n    context.set(\"time_array1\", time_array1);\n    context.set(\"toggle1\", toggle1);\n}\n\nmsg.cycle_time4 = time_array1\nmsg.run_time4 = clock_value1\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":870,"y":540,"wires":[["5f18e74d21b63540"]]},{"id":"204e05efec121b11","type":"OpcUa-Item","z":"85c96ff92dbf9b87","item":"ns=3;s=\"Rfid1_IN\".\"xTagPresent\"","datatype":"Boolean","value":"","name":"RFID Sensor5","x":400,"y":620,"wires":[["a279613b58f714de"]]},{"id":"a279613b58f714de","type":"OpcUa-Client","z":"85c96ff92dbf9b87","endpoint":"733370d575c25424","action":"read","deadbandtype":"a","deadbandvalue":1,"time":10,"timeUnit":"s","certificate":"n","localfile":"","localkeyfile":"","securitymode":"None","securitypolicy":"None","useTransport":false,"maxChunkCount":1,"maxMessageSize":8192,"receiveBufferSize":8192,"sendBufferSize":8192,"name":"CP1_Station_5_BM","x":630,"y":620,"wires":[["5296087531c1911a"],[]]},{"id":"5296087531c1911a","type":"function","z":"85c96ff92dbf9b87","name":"Station 5 Function ","func":"msg.s2 = msg.payload;\n\n\nlet clock_value1 = flow.get(\"clock_value1\") || 0;\nlet clock_value2 = flow.get(\"clock_value2\") || 0;\nlet clock_value3 = flow.get(\"clock_value3\") || 0;\n\nlet mins1 = Math.floor(clock_value1 / 60);\nlet secs1 = clock_value1 % 60;\nlet mins2 = Math.floor(clock_value2 / 60);\nlet secs2 = clock_value2 % 60;\nlet mins3 = Math.floor(clock_value3 / 60);\nlet secs3 = clock_value3 % 60;\n\nvar toggle = context.get(\"toggle\") || 0;\n\nvar hitobject1 = context.get(\"hitobject1\");\nvar hitobject2 = context.get(\"hitobject2\");\nvar hitobject3 = context.get(\"hitobject3\");\n\nvar idle_time = context.get(\"idle_time\") || 0;\n\n\nif (hitobject1 === undefined) {\n    hitobject1 = true;\n    context.set(\"hitobject1\", hitobject1);\n}\nif (hitobject2 === undefined) {\n    hitobject2 = true;\n    context.set(\"hitobject2\", hitobject2);\n}\nif (hitobject3 === undefined) {\n    hitobject3 = true;\n    context.set(\"hitobject3\", hitobject3);\n}\n\nif (msg.reset) {\n    clock_value1 = 0\n    context.set(\"clock_value1\", clock_value1)\n}\n\nif (msg.s2 == false) {\n    idle_time++;\n    msg.idle_time5 = idle_time;\n    context.set(\"idle_time\", idle_time);\n}\n\nif (msg.s2 == true) {\n\n    msg.idle_time5 = idle_time;\n\n}\nif ((msg.s2 == true) && (hitobject1 == true)) {\n    toggle = 1;\n    hitobject1 = false;\n    context.set(\"toggle\", toggle);\n    context.set(\"hitobject1\", hitobject1);\n    msg.msg1 = (\"Toggle 'ON'\")\n\n}\nelse if ((msg.s2 == true) && (hitobject1 == false)) {\n    hitobject1 = false;\n    context.set(\"hitobject\", hitobject1);\n}\n\nelse if ((msg.s2 == false) && (hitobject1 == false)) {\n    toggle = 0;\n    hitobject1 = true;\n    flow.get(\"toggle\")\n    msg.time1 = clock_value1\n\n    context.set(\"toggle\", toggle);\n    context.set(\"hitobject1\", hitobject1);\n    msg.msg2 = (\"Toggle 'OFF'\")\n\n}\n\nelse if ((msg.s2 == false) && (hitobject1 == true)) {\n    hitobject1 = true;\n    context.set(\"hitobject1\", hitobject1);\n}\n\nif (toggle == 1) {\n    clock_value1++;\n\n    if (clock_value1 < 0) clock_value1 = 0;\n\n    flow.set(\"clock_value1\", clock_value1);\n    msg.sec1 = clock_value1\n    let mins = Math.floor(clock_value1 / 60);\n    let secs = clock_value1 % 60;\n\n    msg.time = (mins + (secs / 100.0)).toFixed(2)\n    msg.time = Number(msg.time);\n\n}\n\nvar time1 = msg.time1\nvar toggle1 = context.get(\"toggle1\");\nvar time_array1 = context.get(\"time_array1\");\n\nif (toggle1 === undefined) {\n    toggle1 = 0;\n    context.set(\"toggle1\", toggle1);\n}\n\nif (time_array1 === undefined) {\n    time_array1 = [0, 0, 0, 0, 0]\n    context.set(\"time_array1\", time_array1);\n}\n\nif ((time1 >= 1) && (time_array1[0] < 1) && (toggle1 == 0)) {\n    toggle1 = 1;\n    time_array1[0] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if ((time1 >= 1) && (time_array1[1] < 1) && (toggle1 == 1)) {\n    toggle1 = 2;\n    time_array1[1] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if ((time1 >= 1) && (time_array1[2] < 1) && (toggle1 == 2)) {\n    toggle1 = 3;\n    time_array1[2] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if ((time1 >= 1) && (time_array1[3] < 1) && (toggle1 == 3)) {\n    toggle1 = 4;\n    time_array1[3] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if ((time1 >= 1) && (time_array1[4] < 1) && (toggle1 == 4)) {\n    toggle1 = 5;\n    time_array1[4] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if (toggle1 == 5) {\n    toggle1 = 6;\n    context.set(\"toggle1\", toggle1);\n\n}\n\nif (toggle1 == 6) {\n    toggle1 = 0;\n    time_array1 = [0, 0, 0, 0, 0];\n    context.set(\"time_array1\", time_array1);\n    context.set(\"toggle1\", toggle1);\n}\n\nmsg.cycle_time5 = time_array1\nmsg.run_time5 = clock_value1\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":870,"y":620,"wires":[["5f18e74d21b63540"]]},{"id":"3c909e429b84afce","type":"OpcUa-Item","z":"85c96ff92dbf9b87","item":"ns=3;s=\"Rfid1_IN\".\"xTagPresent\"","datatype":"Boolean","value":"","name":"RFID Sensor6","x":400,"y":700,"wires":[["58513de00bb7ac4c"]]},{"id":"58513de00bb7ac4c","type":"OpcUa-Client","z":"85c96ff92dbf9b87","endpoint":"1da8a1c27cea1862","action":"read","deadbandtype":"a","deadbandvalue":1,"time":10,"timeUnit":"s","certificate":"n","localfile":"","localkeyfile":"","securitymode":"None","securitypolicy":"None","useTransport":false,"maxChunkCount":1,"maxMessageSize":8192,"receiveBufferSize":8192,"sendBufferSize":8192,"name":"CP1_Station_6_Press","x":640,"y":700,"wires":[["d86003c096001e9c"],[]]},{"id":"d86003c096001e9c","type":"function","z":"85c96ff92dbf9b87","name":"Station 6 Function","func":"msg.s2 = msg.payload;\n\n\nlet clock_value1 = flow.get(\"clock_value1\") || 0;\nlet clock_value2 = flow.get(\"clock_value2\") || 0;\nlet clock_value3 = flow.get(\"clock_value3\") || 0; \n\nlet mins1 = Math.floor(clock_value1 / 60);\nlet secs1 = clock_value1 % 60; \nlet mins2 = Math.floor(clock_value2 / 60);\nlet secs2 = clock_value2 % 60; \nlet mins3 = Math.floor(clock_value3 / 60);\nlet secs3 = clock_value3 % 60; \n\nvar toggle = context.get(\"toggle\") || 0; \n\nvar hitobject1 = context.get(\"hitobject1\"); \nvar hitobject2 = context.get(\"hitobject2\"); \nvar hitobject3 = context.get(\"hitobject3\"); \n\nvar idle_time = context.get(\"idle_time\") || 0;\n\n\nif (hitobject1 === undefined) { \n    hitobject1 = true; \n    context.set(\"hitobject1\", hitobject1);\n}\nif (hitobject2 === undefined) {\n    hitobject2 = true;\n    context.set(\"hitobject2\", hitobject2); \n}\nif (hitobject3 === undefined) {\n    hitobject3 = true; \n    context.set(\"hitobject3\", hitobject3); \n}\n\nif (msg.reset) {\n    clock_value1 = 0\n    context.set(\"clock_value1\", clock_value1)\n}\n\nif (msg.s2 == false) {\n    idle_time++;\n    msg.idle_time6 = idle_time; \n    context.set(\"idle_time\", idle_time);\n}\n\nif (msg.s2 == true) {\n\n    msg.idle_time6  = idle_time; \n    \n}\nif ((msg.s2 == true) && (hitobject1 == true)) {\n    toggle = 1;\n    hitobject1 = false;\n    context.set(\"toggle\", toggle); \n    context.set(\"hitobject1\", hitobject1);\n    msg.msg1 = (\"Toggle 'ON'\")\n\n}\nelse if ((msg.s2 == true) && (hitobject1 == false)) { \n    hitobject1 = false; \n    context.set(\"hitobject\", hitobject1);\n}\n    \nelse if ((msg.s2 == false) && (hitobject1 == false)) {\n    toggle = 0;\n    hitobject1 = true; \n    flow.get(\"toggle\")\n    msg.time1 = clock_value1\n    context.set(\"toggle\", toggle);\n    context.set(\"hitobject1\", hitobject1);\n    msg.msg2 = (\"Toggle 'OFF'\")\n\n}\n\nelse if ((msg.s2 == false) && (hitobject1 == true)) { \n    hitobject1 = true; \n    context.set(\"hitobject1\", hitobject1);\n}\n\nif (toggle == 1) {\n    clock_value1++; \n\n    if (clock_value1 < 0) clock_value1 = 0;\n\n    flow.set(\"clock_value1\", clock_value1);\n    msg.sec1 = clock_value1\n    let mins = Math.floor(clock_value1/60);\n    let secs = clock_value1 % 60;\n\n    msg.time = (mins + (secs / 100.0)).toFixed(2)\n    msg.time = Number(msg.time);\n    \n}\n\nvar time1 = msg.time1\nvar toggle1 = context.get(\"toggle1\");\nvar time_array1 = context.get(\"time_array1\");\n\nif (toggle1 === undefined) {\n    toggle1 = 0;\n    context.set(\"toggle1\", toggle1);\n}\n\nif (time_array1 === undefined) {\n    time_array1 = [0, 0, 0, 0, 0]\n    context.set(\"time_array1\", time_array1);\n}\n\nif ((time1 >= 1) && (time_array1[0] < 1) && (toggle1 == 0)) {\n    toggle1 = 1;\n    time_array1[0] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if ((time1 >= 1) && (time_array1[1] < 1) && (toggle1 == 1)) {\n    toggle1 = 2;\n    time_array1[1] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if ((time1 >= 1) && (time_array1[2] < 1) && (toggle1 == 2)) {\n    toggle1 = 3;\n    time_array1[2] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if ((time1 >= 1) && (time_array1[3] < 1) && (toggle1 == 3)) {\n    toggle1 = 4;\n    time_array1[3] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if ((time1 >= 1) && (time_array1[4] < 1) && (toggle1 == 4)) {\n    toggle1 = 5;\n    time_array1[4] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if (toggle1 == 5){\n    toggle1 = 6;\n    context.set(\"toggle1\", toggle1);\n    \n}\n\nif (toggle1 == 6) {\n    toggle1 = 0;\n    time_array1 = [0, 0, 0, 0, 0];\n    context.set(\"time_array1\", time_array1);\n    context.set(\"toggle1\", toggle1);  \n}\n\nmsg.cycle_time6 = time_array1\nmsg.run_time6 = clock_value1\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":870,"y":700,"wires":[["5f18e74d21b63540"]]},{"id":"0c91296dde1dc593","type":"OpcUa-Item","z":"85c96ff92dbf9b87","item":"ns=3;s=\"Rfid1_IN\".\"xTagPresent\"","datatype":"Boolean","value":"","name":"RFID Sensor7","x":400,"y":780,"wires":[["2f506ac5bd63457a"]]},{"id":"2f506ac5bd63457a","type":"OpcUa-Client","z":"85c96ff92dbf9b87","endpoint":"9500387c60a57d0c","action":"read","deadbandtype":"a","deadbandvalue":1,"time":10,"timeUnit":"s","certificate":"n","localfile":"","localkeyfile":"","securitymode":"None","securitypolicy":"None","useTransport":false,"maxChunkCount":1,"maxMessageSize":8192,"receiveBufferSize":8192,"sendBufferSize":8192,"name":"CP1_Station_7_Out","x":640,"y":780,"wires":[["d6d4ed7e6c31270a"],[]]},{"id":"d6d4ed7e6c31270a","type":"function","z":"85c96ff92dbf9b87","name":"Station 7 Function","func":"msg.s2 = msg.payload;\n\n\nlet clock_value1 = flow.get(\"clock_value1\") || 0;\nlet clock_value2 = flow.get(\"clock_value2\") || 0;\nlet clock_value3 = flow.get(\"clock_value3\") || 0; \n\nlet mins1 = Math.floor(clock_value1 / 60);\nlet secs1 = clock_value1 % 60; \nlet mins2 = Math.floor(clock_value2 / 60);\nlet secs2 = clock_value2 % 60; \nlet mins3 = Math.floor(clock_value3 / 60);\nlet secs3 = clock_value3 % 60; \n\nvar toggle = context.get(\"toggle\") || 0; \n\nvar hitobject1 = context.get(\"hitobject1\"); \nvar hitobject2 = context.get(\"hitobject2\"); \nvar hitobject3 = context.get(\"hitobject3\"); \n\nvar idle_time = context.get(\"idle_time\") || 0;\n\n\nif (hitobject1 === undefined) { \n    hitobject1 = true; \n    context.set(\"hitobject1\", hitobject1);\n}\nif (hitobject2 === undefined) {\n    hitobject2 = true;\n    context.set(\"hitobject2\", hitobject2); \n}\nif (hitobject3 === undefined) {\n    hitobject3 = true; \n    context.set(\"hitobject3\", hitobject3); \n}\n\nif (msg.reset) {\n    clock_value1 = 0\n    context.set(\"clock_value1\", clock_value1)\n}\n\nif (msg.s2 == false) {\n    idle_time++;\n    msg.idle_time7 = idle_time; \n    context.set(\"idle_time\", idle_time);\n}\n\nif (msg.s2 == true) {\n\n    msg.idle_time7  = idle_time; \n    \n}\nif ((msg.s2 == true) && (hitobject1 == true)) {\n    toggle = 1;\n    hitobject1 = false;\n    context.set(\"toggle\", toggle); \n    context.set(\"hitobject1\", hitobject1);\n    msg.msg1 = (\"Toggle 'ON'\")\n\n}\nelse if ((msg.s2 == true) && (hitobject1 == false)) { \n    hitobject1 = false; \n    context.set(\"hitobject\", hitobject1);\n}\n    \nelse if ((msg.s2 == false) && (hitobject1 == false)) {\n    toggle = 0;\n    hitobject1 = true; \n    flow.get(\"toggle\")\n    msg.time1 = clock_value1\n    context.set(\"toggle\", toggle);\n    context.set(\"hitobject1\", hitobject1);\n    msg.msg2 = (\"Toggle 'OFF'\")\n\n}\n\nelse if ((msg.s2 == false) && (hitobject1 == true)) { \n    hitobject1 = true; \n    context.set(\"hitobject1\", hitobject1);\n}\n\nif (toggle == 1) {\n    clock_value1++; \n\n    if (clock_value1 < 0) clock_value1 = 0;\n\n    flow.set(\"clock_value1\", clock_value1);\n    msg.sec1 = clock_value1\n    let mins = Math.floor(clock_value1/60);\n    let secs = clock_value1 % 60;\n\n    msg.time = (mins + (secs / 100.0)).toFixed(2)\n    msg.time = Number(msg.time);\n    \n}\n\nvar time1 = msg.time1\nvar toggle1 = context.get(\"toggle1\");\nvar time_array1 = context.get(\"time_array1\");\n\nif (toggle1 === undefined) {\n    toggle1 = 0;\n    context.set(\"toggle1\", toggle1);\n}\n\nif (time_array1 === undefined) {\n    time_array1 = [0, 0, 0, 0, 0]\n    context.set(\"time_array1\", time_array1);\n}\n\nif ((time1 >= 1) && (time_array1[0] < 1) && (toggle1 == 0)) {\n    toggle1 = 1;\n    time_array1[0] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if ((time1 >= 1) && (time_array1[1] < 1) && (toggle1 == 1)) {\n    toggle1 = 2;\n    time_array1[1] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if ((time1 >= 1) && (time_array1[2] < 1) && (toggle1 == 2)) {\n    toggle1 = 3;\n    time_array1[2] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if ((time1 >= 1) && (time_array1[3] < 1) && (toggle1 == 3)) {\n    toggle1 = 4;\n    time_array1[3] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if ((time1 >= 1) && (time_array1[4] < 1) && (toggle1 == 4)) {\n    toggle1 = 5;\n    time_array1[4] = time1;\n    context.set(\"toggle1\", toggle1);\n}\n\nelse if (toggle1 == 5){\n    toggle1 = 6;\n    context.set(\"toggle1\", toggle1);\n    \n}\n\nif (toggle1 == 6) {\n    toggle1 = 0;\n    time_array1 = [0, 0, 0, 0, 0];\n    context.set(\"time_array1\", time_array1);\n    context.set(\"toggle1\", toggle1);  \n}\n\nmsg.cycle_time7 = time_array1\nmsg.run_time7 = clock_value1\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":870,"y":780,"wires":[["5f18e74d21b63540"]]},{"id":"c72c63010b359e12","type":"OpcUa-Client","z":"85c96ff92dbf9b87","endpoint":"2ad94cefa363da14","action":"read","deadbandtype":"a","deadbandvalue":1,"time":10,"timeUnit":"s","certificate":"n","localfile":"","localkeyfile":"","securitymode":"None","securitypolicy":"None","useTransport":false,"maxChunkCount":1,"maxMessageSize":8192,"receiveBufferSize":8192,"sendBufferSize":8192,"name":"CP1_Station_1_FM","x":630,"y":300,"wires":[["b3634cc4e0e47ec2"],[]]},{"id":"5f18e74d21b63540","type":"join","z":"85c96ff92dbf9b87","name":"","mode":"custom","build":"merged","property":"","propertyType":"full","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":".5","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1170,"y":560,"wires":[["0e74a9cf73286c4c"]]},{"id":"b53fb752f3a42764","type":"debug","z":"85c96ff92dbf9b87","name":"debug 90","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1620,"y":480,"wires":[]},{"id":"57fb18205cecc7a9","type":"function","z":"85c96ff92dbf9b87","name":"function 108","func":"msg.stop1 = 0\nmsg.stop2 = 0\nmsg.stop3 = 0\nmsg.stop4 = 0\nmsg.stop5 = 0\nmsg.stop6 = 0\nmsg.stop7 = 0\nmsg.stop8 = 0\nmsg.stop9 = 0\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1350,"y":440,"wires":[["0e74a9cf73286c4c"]]},{"id":"cdc63258f12a50ec","type":"inject","z":"85c96ff92dbf9b87","name":"Reset","props":[{"p":"reset","v":"","vt":"date"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":1170,"y":440,"wires":[["57fb18205cecc7a9"]]},{"id":"9500387c60a57d0c","type":"OpcUa-Endpoint","endpoint":"opc.tcp://172.21.7.1:4840","secpol":"None","secmode":"None","none":true,"login":false,"usercert":false,"usercertificate":"","userprivatekey":""},{"id":"999b7b41e9f7c6f3","type":"OpcUa-Endpoint","endpoint":"opc.tcp://172.21.2.1:4840","secpol":"None","secmode":"None","none":true,"login":false,"usercert":false,"usercertificate":"","userprivatekey":""},{"id":"a56a2dedfd8a174b","type":"OpcUa-Endpoint","endpoint":"opc.tcp://172.21.3.1:4840","secpol":"None","secmode":"None","none":true,"login":false,"usercert":false,"usercertificate":"","userprivatekey":""},{"id":"8ab7f5c25f78e4cc","type":"OpcUa-Endpoint","endpoint":"opc.tcp://172.21.4.1:4840","secpol":"None","secmode":"None","none":true,"login":false,"usercert":false,"usercertificate":"","userprivatekey":""},{"id":"733370d575c25424","type":"OpcUa-Endpoint","endpoint":"opc.tcp://172.21.5.1:4840","secpol":"None","secmode":"None","none":true,"login":false,"usercert":false,"usercertificate":"","userprivatekey":""},{"id":"1da8a1c27cea1862","type":"OpcUa-Endpoint","endpoint":"opc.tcp://172.21.6.1:4840","secpol":"None","secmode":"None","none":true,"login":false,"usercert":false,"usercertificate":"","userprivatekey":""},{"id":"2ad94cefa363da14","type":"OpcUa-Endpoint","endpoint":"opc.tcp://172.21.1.1:4840","secpol":"None","secmode":"None","none":true,"login":false,"usercert":false,"usercertificate":"","userprivatekey":""}]
